<?php

/**
 * Represents one snippet added to the site with is params configured
 */
class Snippet extends DataObject
{

    private static $db = [
        "SnippetClass" => "Varchar(255)",
        "SnippetParams" => "Text",
        "Active" => "Enum('on,off,partial', 'on')",
    ];

    private static $has_many = [
        'Pages' => SnippetPage::class,
    ];

    private static $summary_fields = [
        "SnippetSummary",
        "ActiveLabel",
    ];

    private static $active_labels = [
        'on' => 'Enabled',
        'off' => 'Disabled',
    ];

    public function getTitle()
    {
        return $this->getSnippetProvider()->getTitle();
    }

    public function getSnippetSummary()
    {
        return $this->getSnippetProvider()->getSummary(json_decode($this->SnippetParams, true));
    }

    public function getActiveLabel() {
        return self::$active_labels[$this->Active];
    }

    /**
     * Return the snippet provider attached to this record
     */
    protected function getSnippetProvider()
    {
        if ($this->SnippetClass) {
            return Injector::inst()->get($this->SnippetClass);
        }
    }

    public function getCMSFields()
    {
        $fields = parent::getCMSFields();

        $fields->dataFieldByName('Active')->setSource(self::$active_labels);

        $providerFields = null;
        if ($provider = $this->getSnippetProvider()) {
            $providerFields = $provider->getParamFields();
        }
        $this->expandParams('SnippetParams', $providerFields, $fields, 'Root.Main');

        return $fields;
    }

    /**
     * Return the snippets generated by the configured provider
     */
    public function getSnippets()
    {
        if ($provider = $this->getSnippetProvider()) {
            $params = (array)json_decode($this->SnippetParams, true);
            return $provider->getSnippets($params);
        }
    }


    // ParamExpander functions

    protected function expandParams($modelField, $paramFields, FieldList $fields, $tabName)
    {
        $fields->removeByName($modelField);
        if ($paramFields) {
            foreach ($paramFields as $field) {
                $name = "COMPOUND_{$modelField}_" . $field->getName();
                $field->setName($name);
                $field->setValue($this->getField($name));
                if ($tabName) {
                    $fields->addFieldToTab($tabName, $field);
                } else {
                    $fields->push($field);
                }
            }
        }
    }

    function getField($key) {
        // Compound field handler
        if(substr($key,0,9)=='COMPOUND_') {
            list($dummy, $field, $subfield) = explode('_', $key, 3);
            $json = json_decode(parent::getField($field), true);
            if(isset($json[$subfield])) return $json[$subfield];

        } else {
            return parent::getField($key);
        }
    }

    function setField($key, $val) {
        // Compound field handler
        if(substr($key,0,9)=='COMPOUND_') {
            list($dummy, $field, $subfield) = explode('_', $key, 3);
            $json = json_decode(parent::getField($field), true);
            $json[$subfield] = $val;
            return parent::setField($field, json_encode($json));

        } else {
            return parent::setField($key, $val);
        }
    }
}
